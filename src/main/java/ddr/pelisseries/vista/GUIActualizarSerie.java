package ddr.pelisseries.vista;

import ddr.pelisseries.controlador.Controlador;
import ddr.pelisseries.modelo.ConexionBD;
import ddr.pelisseries.modelo.series;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class GUIActualizarSerie extends javax.swing.JFrame {
    
    series serie = new series();

    /**
     * Creates new form GUIActualizarSerie
     */
    public GUIActualizarSerie() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        Object[][] datos;
        
        //Cargamos los datos del tabla series
        datos = Controlador.getDatosSeriesVistas();
        
        //Poblamos el Combobox con los titulos de las series de la BBDD
        for (Object[] dato : datos) {
            jComboBoxActualizarSerie.addItem(dato[1] + "");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cancelBTSerieActualizar = new javax.swing.JButton();
        acceptBTSerieActualizar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jDateSerieVistaActualizarSerie = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSpinnerTemporadaActualizarSerie = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jSpinnerCapituloActualizarSerie = new javax.swing.JSpinner();
        jComboBoxActualizarSerie = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel1.setText("Actualizar Serie");

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel2.setText("Título de la serie:");

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel3.setText("Fecha:");

        cancelBTSerieActualizar.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        cancelBTSerieActualizar.setText("Cancelar");
        cancelBTSerieActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBTSerieActualizarActionPerformed(evt);
            }
        });

        acceptBTSerieActualizar.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        acceptBTSerieActualizar.setText("Aceptar");
        acceptBTSerieActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptBTSerieActualizarActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon("D:\\Proyectos\\PelisSeries\\Imágenes\\Serie-icon.png")); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel6.setText("Temporada:");

        jSpinnerTemporadaActualizarSerie.setModel(new javax.swing.SpinnerNumberModel(1, null, null, 1));

        jLabel7.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel7.setText("Capítulo:");

        jSpinnerCapituloActualizarSerie.setModel(new javax.swing.SpinnerNumberModel(1, null, null, 1));

        jComboBoxActualizarSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxActualizarSerieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(102, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jDateSerieVistaActualizarSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(59, 59, 59))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jSpinnerCapituloActualizarSerie)
                                        .addGap(98, 98, 98)))
                                .addComponent(jLabel4))
                            .addComponent(jSpinnerTemporadaActualizarSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxActualizarSerie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(69, 69, 69))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(cancelBTSerieActualizar)
                        .addGap(78, 78, 78)
                        .addComponent(acceptBTSerieActualizar)))
                .addGap(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBoxActualizarSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jSpinnerTemporadaActualizarSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jSpinnerCapituloActualizarSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jDateSerieVistaActualizarSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptBTSerieActualizar)
                    .addComponent(cancelBTSerieActualizar))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBTSerieActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBTSerieActualizarActionPerformed
        // TODO add your handling code here:
         setVisible(false);
         dispose();
   
    }//GEN-LAST:event_cancelBTSerieActualizarActionPerformed

    private void acceptBTSerieActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptBTSerieActualizarActionPerformed
        // Al pulsar Aceptar, actualiza la serie
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");         
        
        try (Connection con = new ConexionBD().conectarBD();) { //conexión con BBDD
            try ( PreparedStatement ps = con.prepareStatement("UPDATE series SET temporada = (?), capitulo = (?), fecha_serievista = (?) WHERE titulo = (?) ")) {
                ps.setInt(1, (Integer)jSpinnerTemporadaActualizarSerie.getValue());
                ps.setInt(2, (Integer)jSpinnerCapituloActualizarSerie.getValue());
                String strDate = dateFormat.format(jDateSerieVistaActualizarSerie.getDate());
                String serieSeleccionada = (String) jComboBoxActualizarSerie.getSelectedItem();
                ps.setString(3, strDate);
                ps.setString(4, serieSeleccionada);
                int numFilas = ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Se ha actualizado la serie de " + serieSeleccionada);
                System.out.println(serieSeleccionada);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        } catch (SQLException ex) {
        }
        setVisible(false);
        dispose();        
    }//GEN-LAST:event_acceptBTSerieActualizarActionPerformed

    private void jComboBoxActualizarSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxActualizarSerieActionPerformed
        //Cuando se selecciona serie, cargar el contenido en el resto de campos
        
        String serieSeleccionada = (String) jComboBoxActualizarSerie.getSelectedItem();
                
        try (Connection con = new ConexionBD().conectarBD();) {
            try ( PreparedStatement ps = con.prepareStatement("SELECT titulo, capitulo, temporada, fecha_serievista FROM series WHERE titulo = VALUES (?)");) {
                ps.setString(1, serieSeleccionada);
                String sql = "SELECT titulo, capitulo, temporada, fecha_serievista FROM series WHERE titulo = '" + serieSeleccionada + "'"; //seleccionamos de la tabla el campo que nos interesa
                try ( ResultSet rs = ps.executeQuery(sql)) {
                    while (rs.next()) {
                        jSpinnerTemporadaActualizarSerie.setValue(rs.getInt("temporada")); //introducimos en el Spinner Temporada el dato temporada de la serie seleccioanda
                        jSpinnerCapituloActualizarSerie.setValue(rs.getInt("capitulo")); //introducimos en el Spinner Capitulo el dato capitulo de la serie seleccioanda
                        jDateSerieVistaActualizarSerie.setDate(rs.getDate("fecha_serievista"));
                    }
                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(GUIPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }              
        
    }//GEN-LAST:event_jComboBoxActualizarSerieActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIActualizarSerie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIActualizarSerie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIActualizarSerie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIActualizarSerie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIActualizarSerie().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptBTSerieActualizar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cancelBTSerieActualizar;
    private javax.swing.JComboBox<String> jComboBoxActualizarSerie;
    private com.toedter.calendar.JDateChooser jDateSerieVistaActualizarSerie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSpinner jSpinnerCapituloActualizarSerie;
    private javax.swing.JSpinner jSpinnerTemporadaActualizarSerie;
    // End of variables declaration//GEN-END:variables
}
